<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<html>

 <head>

  <title>
   Murklesoft: Software for Windows and RISC OS
  </title> 

  <meta name="description" content="Murklesoft has writing software since 1995">

  <meta name="keywords" content="Borcherds, emulators, dynamic, gemoetry, 6502Em, Z80Em,
              6502, Z80, Cabriolet, minesweep, winclip">

  <meta http-equiv="Content-Type" content="text/html; charset=US-ASCII">

 </head>

 <body background="background.gif">

  <p align=center>  
   <font size="+3"><b>Murklesoft</b></font><br>
   <font size="+2"><b><i>Software for Windows and RISC OS</i></b></font>
  </p>

  <hr style="color: #CC9933">

  <table>
   <tr>

    <td valign="top" width=450>
     <a href="/murklesoft/index.html">Home</a><br>
     Software for Windows<br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/windows/cabriolet.html">Cabriolet Dynamic Geometry</a><br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/windows/pairs.html">Pairs</a><br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/windows/tsunami.html">Tsunami/Griddler Solver</a><br>
     Software for RISC OS<br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/riscos/cabriolet.html">Cabriolet Dynamic Geometry</a><br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/riscos/6502em.html">6502Em</a><br>
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="iyonix.html">Iyonix</a><br>
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="history.html">History</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="keylayout.html">KeyLayout</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="keys.html">Keys</a><br>
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="menus.html">Menus</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="opcode07.html">Opcode07</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="ripdfs.html">RipDFSDisc</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="roms.html">ROMs</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="scripts.html">Scripts</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="snaps.html">Snapshots</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="superior.html">Superior</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="technical.html">Technical</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="trouble.html">Trouble</a><br> 
     &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<A HREF="virtualdfs.html">VirtualDFS</a><br> 

     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/riscos/Z80em.html">Z80Em</a><br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/riscos/winclip.html">WinClip</a><br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/riscos/minesweep.html">Minesweep</a><br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/riscos/misc.html">Miscellaneous</a><br>
     Software for Linux<br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/linux/cabriolet.html">Cabriolet Dynamic Geometry</a><br>
     Software for Newton<br>
     &nbsp;&nbsp;&nbsp;<a href="/murklesoft/newton/cabriolet.html">Cabriolet Dynamic Geometry</a><br>
     <a href="/murklesoft/pricelist.html">Pricelist</a><br>
     <a href="/murklesoft/contact.html">Contact</a><br>
     <a href="/murklesoft/links.html">Links</a>
    </td>

    <td valign="top">
     <p align=center><font size="+2"><b><i>6502Em</i></b></font></p>
     <p align=center><img src="/murklesoft/riscos/exile.gif" alt="man from Exile"></p>  
<p>An interface has been added to allow 6502 paged ROM images to be developed
which make access to RISC OS SWIs. The SWI is called by executing a
previously undefined 6502 opcode.

<p>NB This will not work in the main memory, only in a paged ROM

<p>NB2 This is the same protocol that !65Host uses to issue SWIs

<h2>6502 Opcode &amp;07 - Issue SWI call</h2>

<pre>
in:     XY (X lo-byte, Y hi-byte) points to control block (cb)

cb?0..2 = SWI number (lo..hi) (bit 17 set => return errors with V set)

cb?3    = number of registers to put back into block on exit, starting at R0

cb?4    = bit set of registers to relocate on entry to SWI
          (bit n set => relocate Rn from 6502 to ARM address space)

cb?5    = bit set of registers to unrelocate on exit from SWI
          (bit n set => unrelocate Rn from ARM to 6502 address space)

cb?6,7  = address (lo,hi) of error buffer (in 6502 space)
          only relevant if bit 17 of SWI number set

cb?8    = length of error buffer (can be zero)

cb!9    = register R0

cb!13   = register R1

..

cb!37   = register R7

out:    A,X,Y preserved
        N,Z,C,V as returned by the ARM on exit from the SWI
        Some or all of the register block is updated with the
        values on exit (possibly relocated), as controlled by cb?3,4,5

        If bit 17 of the SWI number was clear, and an error occurs, then
        control will not returned to the 6502 code - instead the error
        block is copied to &amp;100 in 6502 format (ie zero byte, 1 byte error
        number, followed by zero terminated error string) and then it jumps
        to &amp;100, which causes a BRK. If no error occurred, control will be
        returned and V will be clear.

        If bit 17 of the SWI number was set, then the X form of the SWI
        is issued; if this returns with V set, then the error block is
        copied into the specified error buffer in 6502 format, truncated
        to the length of the error buffer (if truncated the terminating
        zero will be in the last byte of the error buffer).
</pre>
    <td width=15>
    </td>

   </tr>
  </table>

  <p align=right>
   <font size="-2">
    <font color="#CC9933">
     ______________________________________________________<br>
    </font>
    <a href="/murklesoft/contact.html">Murklesoft</a>: Software for Windows and RISC OS<br>
    <a href="http://www.borcherds.co.uk/murklesoft/">www.borcherds.co.uk/murklesoft/</a>
   </font>
  </p>

  <p align=right>
   <a href="http://validator.w3.org/check/referer"><img border="0"
    src="valid-html40.gif" alt="Valid HTML 4.0!" height="31" width="88"></a>
  </p>

 </body>

</html>